/*
 * db-rest
 * A clean REST API wrapping around the Deutsche Bahn API.
 *
 * The version of the OpenAPI document: 5.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.example.dbRest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.example.dbRest.model.Line;
import org.example.dbRest.model.Station;
import org.example.dbRest.model.Stop;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Departure
 */
class DepartureTest {
    private final Departure model = new Departure();

    /**
     * Model tests for Departure
     */
    @Test
    void testDeparture() {
        // TODO: test Departure
    }

    /**
     * Test the property 'tripId'
     */
    @Test
    void tripIdTest() {
        // TODO: test tripId
    }

    /**
     * Test the property 'stop'
     */
    @Test
    void stopTest() {
        // TODO: test stop
    }

    /**
     * Test the property 'when'
     */
    @Test
    void whenTest() {
        // TODO: test when
    }

    /**
     * Test the property 'plannedWhen'
     */
    @Test
    void plannedWhenTest() {
        // TODO: test plannedWhen
    }

    /**
     * Test the property 'prognosedWhen'
     */
    @Test
    void prognosedWhenTest() {
        // TODO: test prognosedWhen
    }

    /**
     * Test the property 'delay'
     */
    @Test
    void delayTest() {
        // TODO: test delay
    }

    /**
     * Test the property 'platform'
     */
    @Test
    void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'plannedPlatform'
     */
    @Test
    void plannedPlatformTest() {
        // TODO: test plannedPlatform
    }

    /**
     * Test the property 'prognosedPlatform'
     */
    @Test
    void prognosedPlatformTest() {
        // TODO: test prognosedPlatform
    }

    /**
     * Test the property 'prognosisType'
     */
    @Test
    void prognosisTypeTest() {
        // TODO: test prognosisType
    }

    /**
     * Test the property 'direction'
     */
    @Test
    void directionTest() {
        // TODO: test direction
    }

    /**
     * Test the property 'provenance'
     */
    @Test
    void provenanceTest() {
        // TODO: test provenance
    }

    /**
     * Test the property 'line'
     */
    @Test
    void lineTest() {
        // TODO: test line
    }

    /**
     * Test the property 'remarks'
     */
    @Test
    void remarksTest() {
        // TODO: test remarks
    }

    /**
     * Test the property 'origin'
     */
    @Test
    void originTest() {
        // TODO: test origin
    }

    /**
     * Test the property 'destination'
     */
    @Test
    void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'cancelled'
     */
    @Test
    void cancelledTest() {
        // TODO: test cancelled
    }

}
