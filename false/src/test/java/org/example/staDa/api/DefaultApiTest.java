/*
 * StaDa - Station Data
 * An API providing master data for german railway stations managed by DB InfraGo AG.  ## License The usage of the data is subject to the Creative Commons Attribution 4.0 International (CC BY 4.0) license.\"
 *
 * The version of the OpenAPI document: 2.9.1
 * Contact: StaDa.API@deutschebahn.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.example.staDa.api;

import org.example.staDa.model.Error;
import org.example.staDa.model.SZentraleQuery;
import org.example.staDa.model.StationQuery;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * This operation provides the master data for german railway stations.
     *
     * Get a QueryResult object containing station objects from the database applying to the parameters described below.  QueryResult is a container providing the following information about the query result.   1. the total number of hits   2. the maximum number of hits to be returned in that QueryResult object   3. the offset of the first hit returned in that QueryResult object with respect to all hits returned by the query   4. the result objects  The parameters described below work as filters to reduce the number of hits returned. Some of these parameters must be used only once, others are allowed to be used multiple times. Valid parameters that are allowed to be used only once are _offset_, _limit_ and _logicaloperator_.  All other parameters described below may be used multiple times.  If a parameter is given more than once, the result will contain all hits that match all given parameter values.  E.g. _federalstate&#x3D;berlin&amp;federalstate&#x3D;saarland_ returns all stations in Berlin and Saarland.  If more than one filter criterion is used at the same time, the different filter criteria are interpreted as if they are combined by a logical AND operator, unless the parameter _logicaloperator_ is set to _or_.  E.g. _category&#x3D;1-2&amp;federalstate&#x3D;hamburg_ returns all stations in Hamburg having category 1 or 2.  _category&#x3D;1-2&amp;federalstate&#x3D;hamburg&amp;federalsate&#x3D;hessen_ returns all stations in Hamburg and Hessen having category 1 or 2, while  _searchstring&#x3D;berlin*&amp;federalstate&#x3D;hamburg&amp;federalsate&#x3D;hessen&amp;logicaloperator&#x3D;or_ will return all stations with a name starting with &#39;berlin&#39; as well as all stations in Hamburg and Hessen.  If no &#39;limit&#39; parameter is given, the number of hits (stations) is set to its maximum value of 10000.  To specify parameter values containing German umlauts, the following encoding has to be used   * ä  &#x3D;&gt; %C3%A4   * ö  &#x3D;&gt; %C3%B6   * ü  &#x3D;&gt; %C3%BC   * Ä  &#x3D;&gt; %C3%84   * Ö  &#x3D;&gt; %C3%96   * Ü  &#x3D;&gt; %C3%9C   * ß  &#x3D;&gt; %C3%9F 
     */
    @Test
    public void stationsGetTest()  {
        Long offset = null;
        Long limit = null;
        String searchstring = null;
        String category = null;
        String federalstate = null;
        Long eva = null;
        String ril = null;
        String logicaloperator = null;
        StationQuery response = api.stationsGet(offset, limit, searchstring, category, federalstate, eva, ril, logicaloperator);

        // TODO: test validations
    }
    
    /**
     * This operation provides the master data for a german railway station selected by its station-id.
     *
     * Get a QueryResult object containing one station object specified by its id.
     */
    @Test
    public void stationsIdGetTest()  {
        Integer id = null;
        StationQuery response = api.stationsIdGet(id);

        // TODO: test validations
    }
    
    /**
     * This operation provides the master data for 3-S-Zentralen.
     *
     * Get a QueryResult object containing SZentralen objects from the database applying to the parameters described below. QueryResult is a container providing the following information about the query result.   1. the total number of hits   2. the maximum number of hits to be returned in that QueryResult object   3. the offset of the first hit returned in that QueryResult object with respect to all hits returned by the query   4. the result objects 
     */
    @Test
    public void szentralenGetTest()  {
        Long offset = null;
        Long limit = null;
        SZentraleQuery response = api.szentralenGet(offset, limit);

        // TODO: test validations
    }
    
    /**
     * This operation provides the master data for 3-S-Zentralen select by its id.
     *
     * Get a QueryResult object containing one SZentralen object specified by its id.
     */
    @Test
    public void szentralenIdGetTest()  {
        Integer id = null;
        SZentraleQuery response = api.szentralenIdGet(id);

        // TODO: test validations
    }
    
}